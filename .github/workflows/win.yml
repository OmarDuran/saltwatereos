name: Windows
on: 
  push:
    branches: master
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: Library/build

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
jobs:
  buildApp:
    name: library
    runs-on: windows-latest
    steps:
      # checkout source code
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '5.15.2'
          host: 'windows'
          target: 'desktop'
          dir: '${{ github.workspace }}/QT/'
      - name: install dependence
        run: |
          git clone https://github.com/zguoch/independence_swEOS.git
          cd independence_swEOS
          unzip -qq swigwin-4.0.2.zip
          unzip -qq VTK8.2.zip
          pwd
          cd ..
      - name: compile library
        run: |
          mkdir Library/build
          cd Library/build
          cmake -DSWIG_EXECUTABLE=D:/a/saltwatereos/saltwatereos/independence_swEOS/swigwin-4.0.2/swig.exe -DPYTHON_INCLUDE_DIR=C:/hostedtoolcache/windows/Python/3.8.7/x64/include -DPYTHON_LIBRARY=C:/hostedtoolcache/windows/Python/3.8.7/x64/libs/python38.lib -DBuild_API_tcl=OFF -DCMAKE_BUILD_TYPE=Release -DCMAKE_GENERATOR_PLATFORM=x64 ..
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1
      - name: Restore NuGet packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}
      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} D:\a\saltwatereos\saltwatereos\Library\build\eosH2ONaCl.sln
          mkdir D:/a/saltwatereos/saltwatereos/Library/API/python/pyswEOS
          cp D:/a/saltwatereos/saltwatereos/Library/build/swig/H2O/H2O.py D:/a/saltwatereos/saltwatereos/Library/API/python/pyswEOS
          cp D:/a/saltwatereos/saltwatereos/Library/build/swig/H2O/Release/*H2O* D:/a/saltwatereos/saltwatereos/Library/API/python/pyswEOS
          mkdir D:/a/saltwatereos/saltwatereos/Library/lib
          cp D:/a/saltwatereos/saltwatereos/Library/build/Release/*.lib D:/a/saltwatereos/saltwatereos/Library/lib/
      - name: cmake cmd app
        run: |
          mkdir ${{env.SOLUTION_FILE_PATH}}\..\..\commandline\build
          cd ${{env.SOLUTION_FILE_PATH}}\..\..\commandline\build
          cmake ..
      - name: Build cmd app
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}\..\..\commandline\build\SaltWaterEOS.sln
      - name: cmake desktop app
        run: |
          mkdir desktop/build
          cd desktop/build
          cmake -DCMAKE_GENERATOR_PLATFORM=x64 -DVTK_DIR=D:/a/saltwatereos/saltwatereos/independence_swEOS/VTK8.2/lib/cmake/vtk-8.2 ..
          msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} D:/a/saltwatereos/saltwatereos/desktop/build/SaltWaterEOS.sln
      - name: package
        run: |
          mkdir swEOS_windows
          cp ${{env.SOLUTION_FILE_PATH}}\Release\*.lib swEOS_windows\
          cp ${{env.SOLUTION_FILE_PATH}}\..\..\commandline\build\Release\*.exe swEOS_windows\swEOS_cmd.exe
          cp -r ${{env.SOLUTION_FILE_PATH}}\..\API swEOS_windows\
          cp ${{env.SOLUTION_FILE_PATH}}\..\..\desktop\build\Release\*.exe swEOS_windows\
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
      - uses: actions/upload-artifact@v2
        with:
          name: swEOS_windows.zip
          path: swEOS_windows